/**
 * {&spacing_component_3xl_%size_x2}
 * %size: apisize
 * x2: scaleFactor
 * 3xl: baseSize
 * spacing: family
 * component: type
 */
declare class DimensionLogic {
    static getDimension(value: string, density?: string, maxWidth?: number, needsValue?: boolean, indexLimit?: string, version?: string): {
        key?: string;
        value: number;
    };
    static getScaleFactor(type?: string, family?: string): number;
    private static getFraction;
    private static getLerp;
    private static getCalculatedValue;
    private static getFluid;
    static calculateSize(size: string, scaleFactor: number | undefined, dimensionScale: boolean): number;
    static addSize(baseSize: string, apiSize: string, baseFactor: number, scaleFactor: number, dimensionScale: boolean): number;
    private static getDynamicSize2;
    private static getDynamicSize;
    static getStroke(size: string, dimensionScale: boolean): {
        value: number;
    };
    static getStrokeValue(index: number): number;
}
export declare const fValueMap: {
    '--fluid-b': string;
    '--fontV-a': string;
    '--fontR-a': string;
    '--pre-fluid-a': string;
    '--fluid-a': string;
    '--fontV-base': string;
    '--fontR-base': string;
    '--pre-fluid-base': string;
    '--pre-base': string;
    '--base': string;
    '--f-0': string;
    '--f-1': string;
    '--f-2': string;
    '--f-3': string;
    '--f-4': string;
    '--f-5': string;
    '--f-6': string;
    '--f-7': string;
    '--f-8': string;
    '--f-9': string;
    '--f-10': string;
    '--f-11': string;
    '--f-12': string;
    '--f-m-0': string;
    '--f-m-1': string;
    '--f-m-2': string;
    '--f-m-3': string;
    '--f-m-4': string;
    '--f-m-5': string;
    '--f-m-6': string;
    '--f-m-7': string;
    '--f-m-8': string;
};
declare function getDensityMap(density: string): Record<string, string>;
export { DimensionLogic, getDensityMap };
