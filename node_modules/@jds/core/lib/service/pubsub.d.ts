export declare abstract class EventController {
    static eventName: string;
    static args: any;
}
export declare function subscribe(eventClass: {
    eventName: string;
    args: any;
}, func: (details: any) => void): {
    unsubscribe: () => void;
};
export declare function publish(event: any): void;
export declare class ElevationController extends EventController {
    static eventName: string;
    static args: Map<number, number>;
    constructor(level: number, remove?: boolean);
    static overlays(elevation: number): boolean;
}
export declare const Elevations: {
    /**
     * Add elevation to the elevation controller service and publishes a event that other components can listen.
     * @param props elevation number the needs to be added
     */
    add: (elevation: number) => void;
    /**
     * Removes elevation to the elevation controller service and publishes a event that other components can listen.
     * @param props elevation number the needs to be removed
     */
    remove: (elevation: number) => void;
    /**
     * pass an elevation number to check if there are elements with more elevation on the screen.
     * @param props elevation number that we need to check
     * @returns boolean indicating if higher elevations are present
     */
    overlays: (elevation: number) => boolean;
};
