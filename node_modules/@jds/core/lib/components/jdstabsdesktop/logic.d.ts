import { IPROP_MAP } from '../../generators/modifyProps';
import { JDSTabsDesktopProps } from './generated';
import { ReactElement } from 'react';
export interface TabItemProps {
    label: string;
    icon?: string;
    disabled?: boolean;
    onClick?: React.MouseEventHandler;
    children?: React.ReactNode;
}
declare const legacyOverflows: readonly ["arrow"];
type legacyOverflowsType = (typeof legacyOverflows)[number];
declare const legacyTabAppearance: readonly ["tab-bar"];
type legacyTabAppearanceType = (typeof legacyTabAppearance)[number];
export interface TabsProps extends Omit<JDSTabsDesktopProps, 'appearance' | 'overflow' | 'onChange'> {
    overflow?: legacyOverflowsType | JDSTabsDesktopProps['overflow'];
    appearance?: JDSTabsDesktopProps['appearance'] | legacyTabAppearanceType;
    children?: ReactElement<TabItemProps>[];
    activeTab?: number;
    onChange?: (index: number) => void;
    maxWidth?: boolean;
}
export declare const PROP_MAP: IPROP_MAP<TabsProps>;
export declare const withLogic: (Component: React.ComponentType<TabsProps>) => React.FC<TabsProps>;
export {};
