declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        description: string;
        usage: string;
    };
    hierarchy: {
        container: (string | {
            "field-container": (string | {
                "input-container": string[];
            })[];
            "active-line-container"?: undefined;
        } | {
            "active-line-container": string[];
            "field-container"?: undefined;
        })[];
    };
    base: {
        container: {
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            gap: string;
            width: string;
            opacity: string;
            behavior: {
                hover: {};
            };
        };
        "field-container": {
            "flex-direction": string;
            width: string;
            "padding-bottom": string;
            "justify-content": string;
            "align-items": string;
        };
        "input-container": {
            "flex-direction": string;
            "justify-content": string;
            width: string;
            "padding-top": number;
            "align-items": string;
            "z-index": number;
        };
        input: {
            disabled: boolean;
            type: string;
            flex: number;
            "text-align": string;
            "placeholder-color": string;
            "placeholder-font-family": string;
            "placeholder-font-size": string;
            "placeholder-line-height": string;
            "placeholder-letter-spacing": string;
            "placeholder-font-weight": string;
            "input-color": string;
            "input-font-family": string;
            "input-font-size": string;
            "input-line-height": string;
            "input-letter-spacing": string;
            "input-font-weight": string;
            "resize-color": string;
            "cursor-color": string;
            width: string;
            behavior: {
                hover: {
                    "resize-color": string;
                };
                focus: {
                    "resize-color": string;
                };
                active: {
                    "resize-color": string;
                };
            };
        };
        "active-line-container": {
            "flex-direction": string;
            width: string;
            "align-items": string;
            "padding-top": number;
            "padding-bottom": number;
        };
        "feedback-container": {
            width: string;
            height: number;
            "background-color": string;
            "border-radius": number;
            show: boolean;
            hidden: boolean;
            behavior: {
                hover: {
                    "background-color": string;
                };
                focus: {
                    "background-color": string;
                };
                active: {
                    "background-color": string;
                };
            };
        };
        jds_feedback_block: {
            size: string;
            state: string;
        };
        "label-border-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
            "max-lines": number;
            textType: string;
            hidden: boolean;
            maxLines: number;
        };
        "input_label-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
            "max-lines": number;
            textType: string;
            maxLines: number;
            "z-index": number;
        };
        "helper-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
        };
    };
    variant: {
        disabled: {
            true: {
                container: {
                    opacity: string;
                };
                input: {
                    disabled: boolean;
                };
            };
        };
        border: {
            true: {
                "feedback-container": {
                    hidden: boolean;
                };
                "input-container": {
                    "padding-top": string;
                };
                "field-container": {
                    "border-width": string;
                    "border-color": string;
                    "border-radius": string;
                    "padding-top": string;
                    "padding-bottom": string;
                    "padding-left": string;
                    "padding-right": string;
                };
                "input_label-jds-text": {
                    hidden: boolean;
                };
                "label-border-jds-text": {
                    hidden: boolean;
                };
            };
        };
        state: {
            success: {
                "feedback-container": {
                    "background-color": string;
                    behavior: {
                        hover: {
                            "background-color": string;
                        };
                        focus: {
                            "background-color": string;
                        };
                        active: {
                            "background-color": string;
                        };
                    };
                };
                "field-container": {
                    "border-color": string;
                };
                input: {
                    "resize-color": string;
                    behavior: {
                        hover: {
                            "resize-color": string;
                        };
                        focus: {
                            "resize-color": string;
                        };
                        active: {
                            "resize-color": string;
                        };
                    };
                };
                jds_feedback_block: {
                    state: string;
                };
            };
            error: {
                "feedback-container": {
                    "background-color": string;
                    behavior: {
                        hover: {
                            "background-color": string;
                        };
                        focus: {
                            "background-color": string;
                        };
                        active: {
                            "background-color": string;
                        };
                    };
                };
                "field-container": {
                    "border-color": string;
                };
                input: {
                    "resize-color": string;
                    behavior: {
                        hover: {
                            "resize-color": string;
                        };
                        focus: {
                            "resize-color": string;
                        };
                        active: {
                            "resize-color": string;
                        };
                    };
                };
                jds_feedback_block: {
                    state: string;
                };
            };
            warning: {
                "feedback-container": {
                    "background-color": string;
                    behavior: {
                        hover: {
                            "background-color": string;
                        };
                        focus: {
                            "background-color": string;
                        };
                        active: {
                            "background-color": string;
                        };
                    };
                };
                "field-container": {
                    "border-color": string;
                };
                input: {
                    "resize-color": string;
                    behavior: {
                        hover: {
                            "resize-color": string;
                        };
                        focus: {
                            "resize-color": string;
                        };
                        active: {
                            "resize-color": string;
                        };
                    };
                };
                jds_feedback_block: {
                    state: string;
                };
            };
        };
        _labelFocus: {
            true: {
                "field-container": {
                    "align-items": string;
                };
                "input_label-jds-text": {
                    "font-family": string;
                    "font-size": string;
                    "line-height": string;
                    "letter-spacing": string;
                    "font-weight": string;
                    "padding-top": number;
                };
            };
        };
    };
    combination: ({
        none: {
            true: {
                "feedback-container": {
                    "background-color": string;
                };
                input: {
                    "resize-color": string;
                };
            };
        };
        true?: undefined;
    } | {
        true: {
            true: {
                "field-container": {
                    "border-color": string;
                };
                input: {
                    "input-color": string;
                    disabled: boolean;
                    "resize-color": string;
                    behavior: {
                        hover: {
                            "resize-color": string;
                        };
                        focus: {
                            "resize-color": string;
                        };
                        active: {
                            "resize-color": string;
                        };
                    };
                };
            };
        };
        none?: undefined;
    })[];
    combination_config: string[][];
    api: {
        config: {
            disabled: {
                values: boolean[];
                doc_description: string;
            };
            border: {
                values: boolean[];
                doc_description: string;
            };
            state: {
                type: string;
                doc_description: string;
                values: string[];
            };
            _labelFocus: {
                values: boolean[];
            };
            _inputFocus: {
                values: boolean[];
            };
            readOnly: {
                values: boolean[];
                doc_description: string;
            };
        };
        data: {
            input: {
                id: {
                    type: string;
                    name: string;
                    platform: string;
                };
                name: {
                    type: string;
                    name: string;
                };
                value: {
                    type: string;
                    name: string;
                };
                rows: {
                    type: string;
                    name: string;
                };
                minLines: {
                    type: string;
                    name: string;
                };
                placeholder: {
                    type: string;
                    name: string;
                };
                "max-length": {
                    type: string;
                    name: string;
                };
                required: {
                    type: string;
                    name: string;
                };
                focusRequester: {
                    type: string;
                    name: string;
                    platform: string;
                };
                imeAction: {
                    type: string;
                    name: string;
                    platform: string;
                };
                capitalization: {
                    type: string;
                    name: string;
                    platform: string;
                };
                semantics: {
                    type: string;
                    name: string;
                    platform: string;
                };
            };
            jds_feedback_block: {
                stateText: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
            };
            "label-border-jds-text": {
                value: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                id: {
                    type: string;
                    name: string;
                    platform: string;
                };
            };
            "input_label-jds-text": {
                value: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                id: {
                    type: string;
                    name: string;
                    platform: string;
                };
            };
            "helper-jds-text": {
                value: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
            };
        };
        events: {
            input: {
                onFocus: string;
                onBlur: string;
                onChange: string;
                onKeydown: {
                    name: string;
                    platform: string;
                };
                onInvalid: string;
                onSubmit: string;
            };
        };
        a11y: {
            input: {
                properties: {
                    "aria-label": {
                        name: string;
                        prop: string;
                    };
                    "aria-describedby": {
                        name: string;
                        platform: string;
                    };
                    "aria-invalid": string;
                    "aria-placeholder": {
                        name: string;
                        prop: string;
                    };
                    "aria-required": {
                        name: string;
                        prop: string;
                    };
                };
            };
        };
    };
};
export default _default;
