import React, { MouseEvent } from 'react';
import type { JDSInputFieldV2Props } from './generated/interface';
interface InputFieldV2Props extends Omit<JDSInputFieldV2Props, 'onChange' | 'onPrefixClick' | 'onSuffixClick' | 'onFocus' | 'onBlur' | 'onInvalid'> {
    onFocus?: React.HTMLAttributes<HTMLInputElement>['onFocus'];
    onBlur?: React.HTMLAttributes<HTMLInputElement>['onBlur'];
    onChange?: React.ChangeEventHandler<HTMLInputElement>;
    onKeyDown?: React.KeyboardEventHandler<HTMLDivElement>;
    onPrefixClick?: (ev: MouseEvent<HTMLDivElement>) => void;
    onSuffixClick?: (value: MouseEvent<HTMLDivElement>) => void;
    onInvalid?: (ev: React.InvalidEvent<HTMLInputElement>) => void;
}
export declare const withLogic: (Component: React.ComponentType<InputFieldV2Props & {
    ref?: React.Ref<HTMLInputElement>;
}>) => React.FC<InputFieldV2Props>;
export { InputFieldV2Props };
