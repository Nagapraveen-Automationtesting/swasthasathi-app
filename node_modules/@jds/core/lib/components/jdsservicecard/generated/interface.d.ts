import type { JDSImageProps } from '../../internal';
export interface JDSServiceCardProps {
    /** Determines the size of the ContentBlock. Size dictates the text and spacing. For size=`xxs`, the layout also changes if only a single CTA is sent. */
    size?: 'xtra-xtra-small' | 'xtra-small' | 'small';
    /**  */
    imageRatio?: 'wide' | 'square' | 'landscape' | 'portrait';
    /** Toggle drop shadow */
    shadow?: boolean;
    image?: string;
    imageFocus?: JDSImageProps['imageFocus'];
    /** When present, the entire card is clickable. */
    fullCardCTA?: string;
    /** The main title copy. */
    title?: string;
    /** Accepts description as string. JSX.Element is also allowed in case you have anchor tags inside your richtext. */
    description?: string;
    /**  */
    primaryCTA?: string;
    /**  */
    children?: React.ReactElement<any>;
    /**  */
    badgeLabel?: string;
    /**  */
    badgeIcon?: string | JSX.Element;
    onClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    onPrimaryClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    primaryCtaAriaLabel?: string;
    primaryCtaAriaDescribedby?: string;
    imageAriaLabel?: string;
    imageAriaDescribedby?: string;
    badgeAriaLabel?: string;
    badgeAriaDescribedby?: string;
    custom?: string;
}
