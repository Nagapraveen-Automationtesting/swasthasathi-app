import { IPROP_MAP } from '../../generators/modifyProps';
import { ButtonProps } from '../jdsbutton/logic';
import { JDSMobileBottomSheetProps } from './generated/interface';
export interface BottomSheetProps extends Omit<JDSMobileBottomSheetProps, 'height' | 'primaryCTA' | 'secondaryCTA' | 'onPrimaryClick' | 'onSecondaryClick'> {
    kind?: 'overlay' | 'passive';
    controlType?: 'normal' | 'stepper';
    close?: boolean;
    title?: string;
    description?: string;
    onPrimaryClick?: (e: React.MouseEvent<HTMLDivElement>) => void;
    onSecondaryClick?: (e: React.MouseEvent<HTMLDivElement>) => void;
    primaryCTA?: string | {
        title: string;
        onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;
        /**
         * @deprecated
         */
        _button?: ButtonProps;
    };
    secondaryCTA?: string | {
        title: string;
        onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;
        /**
         * @deprecated
         */
        _button?: ButtonProps;
    };
    onClose?: () => void;
    onRequestClose?: () => boolean;
    children?: React.ReactNode;
    /**
     * This is used to control header in case of stepper control type
     */
    stepperConfig?: {
        /**
         * Can be set to go to a specific step. default is 0
         */
        activeStep?: number;
        /**
         * default is 2
         */
        totalStep?: number;
        /**
         * Can be used to show the current progress. default is "($activeStep+1)/$totalStep"
         */
        indicatorText?: string;
        /**
         * This is called when back button is clicked.
         */
        onBack?: (activeStep?: number) => boolean;
    };
    height?: string | number;
}
export declare const PROP_MAP: IPROP_MAP<BottomSheetProps>;
export declare const withLogic: (Component: React.ComponentType<BottomSheetProps>) => React.FC<BottomSheetProps>;
