import type { JDSSelectorItemProps } from '../../internal';
export interface JDSSelectorProps {
    /** It can be used to fill the container in which Selector is present. */
    stretch?: boolean;
    /**  */
    kind?: JDSSelectorItemProps['kind'];
    /**  */
    wrap?: JDSSelectorItemProps['wrap'];
    /**  */
    items?: Array<{
        ariaLabel?: string;
        ariaDescribedby?: string;
        iconAriaLabel?: string;
        value?: string;
        label?: string;
        id?: string;
        icon?: string | JSX.Element;
        disabled?: boolean;
    }>;
    /** It gives the current index of selected button of Selector. User can overwrite it by passing a new value. */
    selectedIndex?: number;
    onClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    custom?: string;
}
