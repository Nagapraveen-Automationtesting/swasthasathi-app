export * from './jdsmodaldesktop';
export * from './jdsdesktopbottomsheet';
export * from './generatedIndex-1.0.0';
export * from './generatedIndex-2.0.0';
export * from './custom/heading';
export { Space, ContentLayout, Grid } from './legacy';
export { registerIcons } from '@jds/react-engine';
export * from './jdsdatepickerdesktop';
export * from './jdsverticalstepper';
export { BreadcrumbItem } from './jdsbreadcrumbs';
declare const Notifications: {
    nudge: {
        (props: string | import("./jdsnudge/logic").NotificationProps): string;
        update(id: string, props: string | import("./jdsnudge/logic").NotificationProps): void;
        dismiss(id: string): string;
        dismissAll(): void;
        isActive(id: string): boolean;
        get(id: string): void | import("./jdsnudge/logic").NotificationProps;
    };
    toast: {
        (props: string | import("./jdstoast/interface").ToastProps): string;
        update(id: string, props: string | import("./jdstoast/interface").ToastProps): void;
        dismissAll(): void;
        dismiss(id: string): string;
        info(props: string | import("../service/NotificationService").SemanticToastProps): string;
        error(props: string | import("../service/NotificationService").SemanticToastProps): string;
        success(props: string | import("../service/NotificationService").SemanticToastProps): string;
        warning(props: string | import("../service/NotificationService").SemanticToastProps): string;
        isActive(id: string): boolean;
        get(id: string): void | import("./jdstoast/interface").ToastProps;
    };
    Container: import("react").FC<import("./notifications/container/NotificationContainer").NotificationContainerProps>;
    Banner: import("react").FC<import("./jdsnotificationbanner/logic").NotificationBannerProps> & {
        slotName?: string | undefined;
    };
};
export { Notifications };
