import { ReactElement } from 'react';
import { AccordionPanelProps } from '../jdsaccordion/logic';
import type { JDSAccordionListProps } from './generated';
export interface AccordionProps extends Omit<JDSAccordionListProps, 'children'> {
    /**
     * If false/undefined, only allows one accordionPanel to be expanded by collapsing others on each click.
     */
    allowMultiple?: boolean;
    /**
     * List of Panels that should be expanded. This is default, but also when changed again, should reset all panels to provided states.
     */
    expanded?: number[];
    /**
     * Trigger whenever user clicks to expand/collapse accordionPanels as well as when expanded prop is changed
     * @param expandedPanels
     */
    onChange?: (expandedPanels: number[]) => void;
    /**
     * The icon to be displayed. The plus icon changes to a minus icon when the corresponding panel is expanded
     */
    iconType?: 'chevron' | 'plus';
    /**
     * Must be children of type `<AccordionPanel>`
     */
    children?: ReactElement<AccordionPanelProps> | ReactElement<AccordionPanelProps>[];
}
export declare const withLogic: (Component: React.ComponentType<AccordionProps>) => React.FC<AccordionProps>;
