declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        description: string;
        layerName: string;
    };
    hierarchy: {
        popup: {
            "popup-container": string[];
        }[];
    };
    base: {
        popup: {
            priority: number;
            passive: boolean;
            show: boolean;
        };
        "popup-container": {
            "background-color": string;
            height: string;
            width: string;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            "enter-animation-name": string;
            "exit-animation-name": string;
            "enter-animation-curve": string;
            "exit-animation-curve": string;
            "enter-animation-duration": number;
            "exit-animation-duration": number;
            opacity: string;
            transition: {
                property: string[];
                duration: string;
                "timing-function": string;
            };
        };
        jds_side_panel_internal: {
            open: boolean;
            maxWidth: boolean;
        };
    };
    variant: {
        open: {
            true: {
                popup: {
                    passive: boolean;
                };
                "popup-container": {
                    opacity: string;
                };
                jds_side_panel_internal: {
                    open: boolean;
                };
            };
        };
        direction: {
            right: {
                "popup-container": {
                    "justify-content": string;
                };
                jds_side_panel_internal: {
                    direction: string;
                };
            };
        };
        maxWidth: {
            true: {
                jds_side_panel_internal: {
                    maxWidth: boolean;
                };
            };
        };
        showClose: {
            false: {
                jds_side_panel_internal: {
                    showClose: boolean;
                };
            };
        };
    };
    combination: {}[];
    combination_config: never[];
    api: {
        config: {
            direction: {
                values: string[];
                doc_description: string;
            };
            showClose: {
                values: boolean[];
                doc_description: string;
            };
            open: {
                values: boolean[];
                doc_description: string;
            };
            maxWidth: {
                values: boolean[];
                doc_description: string;
                function: boolean;
            };
            disableTransition: {
                values: boolean[];
                platform: string;
            };
        };
        data: {
            jds_side_panel_internal: {
                items: {
                    type: string;
                    name: string;
                    object: {
                        title: string;
                        prefix: string;
                        showSuffix: string;
                        type: string;
                    };
                };
                "items.prefix": {
                    type: string;
                    name: string;
                };
                "items.title": {
                    type: string;
                    name: string;
                };
                "links.showSuffix": {
                    type: string;
                    name: string;
                };
                "items.type": {
                    type: string;
                    name: string;
                };
                prefix: {
                    name: string;
                    type: string;
                    accepts: string[];
                    max: number;
                };
                header: {
                    name: string;
                    type: string;
                    doc_description: string;
                    accepts: string[];
                    max: number;
                };
                children: {
                    name: string;
                    type: string;
                    doc_description: string;
                    accepts: string[];
                };
            };
        };
        events: {
            jds_side_panel_internal: {
                onClose: string;
                onContainerClick: string;
                onSwipeLeft: string;
                onSidePanelSuffixClick: string;
            };
            popup: {
                onClick: string;
            };
        };
        a11y: {
            jds_side_panel_internal: {
                name: string;
                repeating: {
                    itemAriaLabel: string;
                    itemSuffixAriaLabel: string;
                    itemAriaDescribedby: {
                        name: string;
                        platform: string;
                    };
                };
            };
        };
    };
};
export default _default;
