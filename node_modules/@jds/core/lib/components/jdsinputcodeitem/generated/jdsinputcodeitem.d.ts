declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        internal: boolean;
    };
    hierarchy: {
        "input-container": (string | {
            "active-line-container": string[];
        })[];
    };
    base: {
        "input-container": {
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            gap: string;
            width: string;
            behavior: {
                hover: {};
            };
        };
        jds_input: {
            width: string;
            type: string;
            textAlign: string;
            textSize: string;
            maxLength: number;
        };
        "active-line-container": {
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            width: string;
            "padding-top": string;
            "padding-bottom": string;
        };
        "feedback-container": {
            width: string;
            height: string;
            "background-color": string;
            "border-radius": string;
            show: boolean;
            behavior: {
                focus: {
                    "background-color": string;
                };
                active: {
                    "background-color": string;
                };
            };
        };
    };
    variant: {
        state: {
            success: {
                "feedback-container": {
                    "background-color": string;
                };
            };
            error: {
                "feedback-container": {
                    "background-color": string;
                };
            };
            warning: {
                "feedback-container": {
                    "background-color": string;
                };
            };
        };
        disabled: {
            true: {
                jds_input: {
                    disabled: boolean;
                };
            };
        };
        secureText: {
            true: {
                jds_input: {
                    type: string;
                };
            };
        };
        autoComplete: {
            true: {
                jds_input: {
                    autoComplete: string;
                };
            };
        };
    };
    combination: {
        none: {
            true: {
                "feedback-container": {
                    "background-color": string;
                };
            };
        };
    }[];
    combination_config: string[][];
    api: {
        config: {
            autoComplete: {
                values: boolean[];
                platform: string;
            };
            secureText: {
                values: boolean[];
            };
            state: {
                type: string;
                values: string[];
            };
            _inputFocus: {
                values: boolean[];
            };
            disabled: {
                values: boolean[];
            };
        };
        data: {
            jds_input: {
                value: {
                    type: string;
                    name: string;
                };
                placeholder: {
                    type: string;
                    name: string;
                };
                autocomplete: {
                    type: string;
                    name: string;
                    platform: string;
                };
                required: {
                    type: string;
                    name: string;
                };
                focusRequester: {
                    type: string;
                    name: string;
                    platform: string;
                };
            };
        };
        events: {
            jds_input: {
                onFocus: string;
                onBlur: string;
                onChange: string;
                onSubmit: string;
                onKeydown: {
                    name: string;
                    platform: string;
                };
                onPaste: string;
                onInvalid: string;
            };
        };
        a11y: {
            jds_input: {
                properties: {
                    ariaLabel: {
                        name: string;
                        platform: string;
                    };
                };
            };
        };
    };
};
export default _default;
