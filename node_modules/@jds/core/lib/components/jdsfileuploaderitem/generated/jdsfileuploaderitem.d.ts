declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        internal: boolean;
    };
    hierarchy: {
        container: (string | {
            "file-container": ({
                "state-container": (string | {
                    "state-jds-icon-container": string[];
                })[];
                "button-container"?: undefined;
            } | {
                "button-container": string[];
                "state-container"?: undefined;
            })[];
        })[];
    };
    base: {
        container: {
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            width: string;
            opacity: string;
            "background-color": string;
        };
        "file-container": {
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            gap: string;
            "padding-left": string;
            width: string;
        };
        "state-container": {
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            gap: string;
        };
        jds_spinner: {
            hidden: boolean;
            kind: string;
            size: string;
        };
        "button-container": {
            show: boolean;
            size: string;
            "align-items": string;
        };
        "suffix-jds_button": {
            icon: string;
            kind: string;
            size: string;
        };
        jds_divider: {
            hidden: boolean;
            orientation: string;
            pad: string;
        };
        "state-jds-icon": {
            size: string;
            color: string;
            hidden: boolean;
        };
        "state-jds-icon-container": {
            "background-color": string;
            "border-radius": string;
            size: string;
            "justify-content": string;
            "align-items": string;
            hidden: boolean;
        };
        "message-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
            textType: string;
        };
    };
    variant: {
        kind: {
            collapsed: {
                "suffix-jds_button": {
                    icon: string;
                };
                jds_divider: {
                    hidden: boolean;
                };
            };
            expanded: {
                "suffix-jds_button": {
                    icon: string;
                };
                jds_divider: {
                    hidden: boolean;
                };
            };
        };
        showDivider: {
            false: {
                jds_divider: {
                    hidden: boolean;
                };
            };
        };
    };
    combination: {
        normal: {
            loading: {
                jds_spinner: {
                    hidden: boolean;
                };
                "state-jds-icon": {};
                "state-jds-icon-container": {
                    "background-color": string;
                    "border-radius": string;
                    size: string;
                    "justify-content": string;
                    "align-items": string;
                    hidden: boolean;
                };
            };
            success: {
                jds_spinner: {
                    hidden: boolean;
                };
                "state-jds-icon": {
                    color: string;
                    value: string;
                    hidden: boolean;
                    ic: string;
                };
                "state-jds-icon-container": {
                    "background-color": string;
                    "border-radius": string;
                    size: string;
                    "justify-content": string;
                    "align-items": string;
                    hidden: boolean;
                    ic: string;
                };
                "message-jds-text": {
                    color: string;
                };
            };
            error: {
                jds_spinner: {
                    hidden: boolean;
                };
                "suffix-jds_button": {
                    hidden: boolean;
                };
                "state-jds-icon": {
                    color: string;
                    value: string;
                    hidden: boolean;
                    ic: string;
                };
                "state-jds-icon-container": {
                    "background-color": string;
                    "border-radius": string;
                    size: string;
                    "justify-content": string;
                    "align-items": string;
                    hidden: boolean;
                    ic: string;
                };
                "message-jds-text": {
                    color: string;
                };
            };
        };
    }[];
    combination_config: string[][];
    api: {
        config: {
            state: {
                values: string[];
            };
            kind: {
                values: string[];
            };
            showDivider: {
                values: boolean[];
            };
        };
        data: {
            "message-jds-text": {
                value: {
                    type: string;
                    name: string;
                };
            };
        };
        events: {
            "suffix-jds_button": {
                onClick: string;
            };
        };
        a11y: {
            container: {
                properties: {
                    role: {
                        value: string;
                    };
                    "aria-label": {
                        name: string;
                        prop: string;
                    };
                    "aria-describedby": {
                        name: string;
                        platform: string;
                    };
                };
            };
            "suffix-jds_button": {
                properties: {
                    ariaLabel: {
                        name: string;
                        value: string;
                    };
                    ariaExpanded: string;
                };
            };
        };
    };
};
export default _default;
