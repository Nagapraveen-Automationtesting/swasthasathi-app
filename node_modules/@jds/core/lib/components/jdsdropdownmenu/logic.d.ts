import { DropdownMenuPosition, DropdownMenuProps } from './interface';
import { RefObject } from 'react';
import { JDSDropdownMenuGroupProps } from '../generatedIndex';
export declare const getIcon: (icon?: string | JSX.Element) => JSX.Element | undefined;
export interface JDSDropdownMenuProps {
    /**  */
    searchTrigger?: boolean;
    /**  */
    labelTextWrap?: boolean;
    /**  */
    open?: boolean;
    /**  */
    width?: 'max-content' | 'trigger';
    /**  */
    position?: 'bottom_start' | 'bottom_end' | 'top_start' | 'top_end' | 'right_start' | 'right_end' | 'left_start' | 'left_end' | 'bottom_centre' | 'top_centre';
    /**  */
    searchLabel?: string;
    /**  */
    searchValue?: string;
    /**  */
    searchSuffix?: string | JSX.Element;
    /**  */
    offsetX?: string | number;
    /**  */
    offsetY?: string | number;
    /**
     * The target element underneath which the menu should open from.
     */
    anchorEl?: RefObject<HTMLElement>;
    onSuffixClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    onSearchChange?: () => void;
    onClose?: () => void;
    children?: React.ReactElement<JDSDropdownMenuGroupProps>;
    custom?: string;
}
export declare function getPositionCoordinates(position: DropdownMenuPosition, anchorRect: DOMRect, containerDomRect: DOMRect): {
    left: number;
    top: number;
    maxHeight: number;
    maxWidth: number;
};
export declare const withLogic: (Component: React.ComponentType<DropdownMenuProps>) => React.FC<DropdownMenuProps>;
export type { DropdownMenuProps };
