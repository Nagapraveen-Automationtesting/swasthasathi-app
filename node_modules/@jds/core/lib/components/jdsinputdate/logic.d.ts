import { type InputDateProps } from './interface';
export interface NormalisedDate {
    day?: number;
    month?: number;
    year?: number;
}
export declare const getNormalisedDate: (value?: string | Date) => {
    day: undefined;
    month: undefined;
    year: undefined;
} | {
    day: number;
    month: number;
    year: number;
};
export declare const months: string[];
export declare const validateYear: (value: NormalisedDate, min?: string | Date, max?: string | Date) => boolean;
export declare const validateMonth: (value: NormalisedDate, min?: string | Date, max?: string | Date) => boolean;
export declare const validateDate: (value: NormalisedDate, min?: string | Date, max?: string | Date) => boolean;
export declare const nodeJump: (key: string, sourceNode?: HTMLInputElement, nextNode?: HTMLInputElement, prevNode?: HTMLInputElement, sourceNodeError?: boolean) => void;
export declare const getDateFromObject: (obj: NormalisedDate) => Date;
export declare const getDateStringFromObject: (obj: NormalisedDate) => string;
export declare const getDisabledsDays: (date: NormalisedDate, step?: number) => Date[];
export declare const withLogic: (Component: React.ComponentType<InputDateProps>) => React.FC<InputDateProps>;
export { InputDateProps };
