import { ButtonProps } from '../jdsbutton/logic';
import { IPROP_MAP } from '../../generators/modifyProps';
import { JDSPromoCardProps } from './generated';
import { ReactElement } from 'react';
import { TextProps } from '../jdstext/logic';
declare const legacySizes: string[];
type legacySizesType = (typeof legacySizes)[number];
export interface PromoCardProps extends Omit<JDSPromoCardProps, 'size' | 'children' | 'footerPrefix' | 'footerSuffix' | 'primaryCTA' | 'image'> {
    /**
     * Size is detemined by contentBlockSize.
     * @deprecated
     */
    contentBlockSize?: 'default' | 'compact';
    /**
     *
     * Determines the size of the PromoCard. Size dictates the text and spacing.
     */
    size?: legacySizesType | JDSPromoCardProps['size'];
    /**
     *Accepts description as string. JSX.Element is also allowed in case you have anchor tags inside your richtext.
     */
    description?: string;
    /**
     * Image HTML tags. e.g. `<img>`
     */
    image?: string | JSX.Element;
    /**
     * Please see `Link>LinkType`. The `button={}` parameter can be sent to overwrite
     * default button behaviours. E.g. different kind, destructive, with icons etc.
     */
    primaryCTA?: string | {
        /**
         * @deprecated pass string to `primaryCTA`
         */
        title: string;
        /**
         * @deprecated use `onPrimaryClick`
         */
        onClick?: ButtonProps['onClick'];
        /**
         * @deprecated
         */
        _button?: ButtonProps;
    };
    /**
     * Image HTML tags. e.g. `<img>`
     */
    children?: ReactElement;
    /**
     * footerPrefix corresponds to the left part of the footer. Incase of a String, a text with style body-xxs with grey-100 color is shown
     * Passing string is deprecated. Please pass a jds text component
     */
    footerPrefix?: string | ReactElement<TextProps>;
    footerSuffix?: string | ReactElement<TextProps>;
}
export declare const PROP_MAP: IPROP_MAP<PromoCardProps>;
export declare const withLogic: (Component: React.ComponentType<PromoCardProps>) => React.FC<PromoCardProps>;
export {};
