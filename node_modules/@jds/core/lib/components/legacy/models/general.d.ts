import { ButtonProps } from '../elements/Button/Button';
export type LinkType = {
    /**
     * Determines the title if provided. When used as Button, this will be sent to Button's title too.
     */
    title?: string;
    /**
     * Most likely you are using this library with React-Router, NextJS, Gatsby or React Static.
     * This prop allows your app to respect your framework's `Link` element. Some `Link` libraries have url prop as `to`, some have it as `href`. In addition to these, you may also want to send extra props for your Link library. You can do so.
     * e.g.
     * ```
     * import { Link as RouterLink} from "react-router-dom";```
     * ```<Link provider={<RouterLink to='/about'/>} />
     * ```
     */
    provider?: JSX.Element;
    /**
     * Determines the href of link. This will not work if `provider` is also sent. You must pass appropriate href prop to you provider. e.g. `to`.
     */
    href?: string;
    /**
     * Determines the internal/external of link. When provided, provider will be ignored and a regular anchor tag with `target=_blank` will be used.
     */
    newTab?: boolean;
    /**
     * Event when link has been clicked
     */
    onClick?: (event: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void;
};
export type LinkButtonType = {
    button?: boolean | ButtonProps;
} & LinkType;
export type IconLinkType = {
    icon: JSX.Element;
} & LinkType;
