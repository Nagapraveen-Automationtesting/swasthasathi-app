import type { JDSSidePanelItemProps, JDSAvatarProps, JDSIconProps, JDSButtonProps, JDSTextProps } from '../../internal';
export interface JDSSidePanelInternalProps {
    /** Determines whether open/close should happen from left or right. */
    direction?: 'left' | 'right';
    /** Whether a close on the right should be shown. */
    showClose?: boolean;
    /** Can be used to programatically open/close the drawer with animation and selected direction. */
    open?: boolean;
    /** If set it will limit max width of the panel to 412px. */
    maxWidth?: boolean;
    /**  */
    disableTransition?: boolean;
    /**  */
    items?: Array<{
        itemAriaLabel?: string;
        itemSuffixAriaLabel?: string;
        itemAriaDescribedby?: string;
        title?: string;
        prefix?: string | JSX.Element;
        showSuffix?: boolean;
        type?: JDSSidePanelItemProps['type'];
    }>;
    onClose?: () => void;
    onContainerClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    onSwipeLeft?: () => void;
    onSidePanelSuffixClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    prefix?: React.ReactElement<JDSAvatarProps> | React.ReactElement<JDSIconProps> | React.ReactElement<JDSButtonProps>;
    header?: React.ReactElement<JDSTextProps>;
    children?: Array<React.ReactNode> | React.ReactNode;
    suffixAriaLabel?: string;
    custom?: string;
}
