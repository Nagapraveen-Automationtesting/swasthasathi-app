import { IPROP_MAP } from '../../generators/modifyProps';
import { JDSNotificationButtonProps } from '../jdsnotificationbutton/generated';
import { ReactElement } from 'react';
import { AvatarProps } from '../jdsavatar/logic';
import { ButtonProps } from '../jdsbutton/logic';
import { IconProps } from '../jdsicon/logic';
import { JDSNudgeProps } from './generated';
export interface NotificationProps extends Omit<JDSNudgeProps, 'primaryCTA' | 'secondaryCTA' | 'prefix' | 'suffix'> {
    id?: string;
    /**
     * The primary Link / Button
     */
    primaryCTA?: string | {
        /**
         * @deprecated
         * pass a string to `primaryCTA`
         */
        title: string;
        /**
         * @deprecated
         * use `onPrimaryClick`
         */
        onClick?: ButtonProps['onClick'];
    };
    /**
     * The secondary Link / Button
     */
    secondaryCTA?: string | {
        /**
         * @deprecated
         * pass a string to `secondaryCTA`
         */
        title: string;
        /**
         * @deprecated
         * use `onSecondaryClick`
         */
        onClick?: ButtonProps['onClick'];
    };
    /**
     * An Icon or Avatar as a prefix.
     * @deprecated
     * use `prefix`
     */
    icon?: ReactElement<IconProps | AvatarProps>;
    suffix?: JDSNotificationButtonProps;
    prefix?: string | JDSNudgeProps['prefix'];
}
export interface NudgeProps extends Omit<NotificationProps, 'suffix' | 'onShow' | 'onClose'> {
    title: string;
    onShow?: (id: string) => void;
    onClose?: (id: string) => void;
    suffix?: ReactElement<JDSNotificationButtonProps> | JDSNotificationButtonProps;
}
export declare const PROP_MAP: IPROP_MAP<NudgeProps>;
export declare const withLogic: (Component: React.ComponentType<NudgeProps>) => React.FC<NudgeProps>;
