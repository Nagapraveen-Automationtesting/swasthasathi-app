import { IPROP_MAP } from '../../generators/modifyProps';
import { BadgeProps } from '../jdsbadge/logic';
import { JDSListBlockProps } from './generated';
import { TagProps } from '../jdstag/logic';
import { TextProps } from '../jdstext/logic';
declare const legacySpacing: readonly ["m", "s"];
type legacySpacingType = (typeof legacySpacing)[number];
export interface ListBlockProps extends Omit<JDSListBlockProps, 'spacing' | 'isTitleVisible' | 'top'> {
    spacing?: legacySpacingType | JDSListBlockProps['spacing'];
    top?: string | React.ReactElement<TextProps>;
    ariaLabelledby?: string;
    ariaDescribedby?: string;
    captionBlock?: {
        /**
         * @deprecated
         * use `captionBlockText`
         */
        text: string | React.ReactElement<TextProps>;
        /**
         * @deprecated
         * use captionBlockHelper
         */
        helper?: string | React.ReactElement<TextProps | BadgeProps | TagProps>;
        /**
         * @deprecated
         * use captionBlockValue
         */
        value?: string | React.ReactElement<TextProps | BadgeProps | TagProps>;
    };
    titleBlock?: {
        /**
         * @deprecated
         * use `titleBlockText`
         */
        text: string | React.ReactElement<TextProps>;
        /**
         * @deprecated
         * use `titleBlockHelper`
         */
        helper?: string | React.ReactElement<TextProps | BadgeProps | TagProps>;
        /**
         * @deprecated
         * use `titleBlockValue
         */
        value?: string | React.ReactElement<TextProps | BadgeProps | TagProps>;
    };
    helperBlock?: {
        /**
         * @deprecated
         * use `helperBlockText`
         */
        text: string | React.ReactElement<TextProps>;
        /**
         * @deprecated
         * use `helperBlockHelper`
         */
        helper?: string | React.ReactElement<TextProps | BadgeProps | TagProps>;
        /**
         * @deprecated
         * use `helperBlockValue`
         */
        value?: string | React.ReactElement<TextProps | BadgeProps | TagProps>;
    };
}
export declare const PROP_MAP: IPROP_MAP<ListBlockProps>;
export declare const withLogic: (Component: React.ComponentType<ListBlockProps>) => React.FC<ListBlockProps>;
export {};
