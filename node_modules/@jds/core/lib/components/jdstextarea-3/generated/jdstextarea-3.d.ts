declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        description: string;
        usage: string;
        category: string[];
    };
    hierarchy: {
        container: string[];
    };
    base: {
        container: {
            "background-color": string;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            "border-color": string;
            "border-width": string;
            "border-radius": string;
            gap: string;
            "padding-top": string;
            "padding-bottom": string;
            "padding-left": string;
            "padding-right": string;
        };
        textarea: {
            type: string;
            "text-align": string;
            "placeholder-color": string;
            "placeholder-font-family": string;
            "placeholder-font-size": string;
            "placeholder-line-height": string;
            "placeholder-font-weight": string;
            "input-color": string;
            "input-font-family": string;
            "input-font-size": string;
            "input-line-height": string;
            "input-font-weight": string;
            "cursor-color": string;
            "resize-color": string;
            flex: number;
            multiline: boolean;
            textAlignVertical: string;
        };
    };
    variant: {
        attention: {
            low: {
                container: {
                    "border-width": string;
                    "border-color": string;
                };
            };
            high: {
                container: {
                    "background-color": string;
                    "border-color": string;
                };
            };
        };
        size: {
            S: {
                container: {
                    gap: string;
                };
                textarea: {
                    "placeholder-font-family": string;
                    "placeholder-font-size": string;
                    "placeholder-line-height": string;
                    "input-font-family": string;
                    "input-font-size": string;
                    "input-line-height": string;
                };
            };
            L: {
                container: {
                    gap: string;
                    "padding-top": string;
                    "padding-bottom": string;
                    "padding-left": string;
                    "padding-right": string;
                };
                textarea: {
                    "placeholder-font-family": string;
                    "placeholder-font-size": string;
                    "placeholder-line-height": string;
                    "input-font-family": string;
                    "input-font-size": string;
                    "input-line-height": string;
                };
            };
        };
        disabled: {
            true: {
                container: {
                    disabled: boolean;
                    opacity: string;
                };
                textarea: {
                    disabled: boolean;
                };
            };
        };
        readOnly: {
            true: {
                container: {
                    disabled: boolean;
                    "background-color": string;
                };
                textarea: {
                    disabled: boolean;
                };
            };
        };
        _state: {
            active: {
                container: {
                    "border-color": string;
                };
            };
        };
    };
    combination: ({
        active: {
            medium: {
                container: {
                    "border-color": string;
                };
            };
            high: {
                container: {
                    "background-color": string;
                    "border-color": string;
                };
            };
        };
        true?: undefined;
        low?: undefined;
    } | {
        true: {
            low: {
                container: {
                    "background-color": string;
                };
            };
            high: {
                container: {
                    "background-color": string;
                };
            };
        };
        active?: undefined;
        low?: undefined;
    } | {
        low: {
            S: {
                container: {
                    "border-radius": number;
                    "padding-left": number;
                    "padding-right": number;
                };
            };
            M: {
                container: {
                    "border-radius": number;
                    "padding-left": number;
                    "padding-right": number;
                };
            };
            L: {
                container: {
                    "border-radius": number;
                    "padding-left": number;
                    "padding-right": number;
                };
            };
        };
        active?: undefined;
        true?: undefined;
    })[];
    combination_config: string[][];
    api: {
        config: {
            attention: {
                values: string[];
            };
            size: {
                values: string[];
            };
            readOnly: {
                values: boolean[];
            };
            disabled: {
                values: boolean[];
            };
            _state: {
                values: string[];
            };
        };
        data: {
            container: {
                appearance: {
                    type: string;
                    name: string;
                    values: string[];
                };
            };
            textarea: {
                value: {
                    type: string;
                    name: string;
                };
                placeholder: {
                    type: string;
                    name: string;
                };
                rows: {
                    type: string;
                    name: string;
                };
                maxLength: {
                    type: string;
                    name: string;
                };
                id: {
                    type: string;
                    name: string;
                    platform: string;
                };
            };
        };
        events: {
            textarea: {
                onChange: {
                    name: string;
                    returnType: string[];
                };
                onFocus: string;
                onBlur: {
                    name: string;
                    platform: string;
                };
            };
        };
        a11y: {
            textarea: {
                properties: {
                    "aria-label": {
                        name: string;
                    };
                    "aria-describedby": {
                        name: string;
                        platform: string;
                    };
                    "aria-invalid": {
                        name: string;
                    };
                };
            };
        };
    };
};
export default _default;
