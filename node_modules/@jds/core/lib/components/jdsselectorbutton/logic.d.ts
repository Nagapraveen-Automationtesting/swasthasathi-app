import { IPROP_MAP } from '../../generators/modifyProps';
import { JDSSelectorButtonProps } from './generated';
declare const legacyKinds: readonly ["tertiary-narrow"];
type legacyKindsType = (typeof legacyKinds)[number];
declare const legacyAppearance: readonly ["grey-scale"];
type legacyAppearanceType = (typeof legacyAppearance)[number];
declare const legacySizes: readonly ["extra-large"];
type legacySizesType = (typeof legacySizes)[number];
export interface SelectorButtonProps extends Omit<JDSSelectorButtonProps, 'kind' | 'appearance' | 'size'> {
    kind?: JDSSelectorButtonProps['kind'] | legacyKindsType;
    iconPosition?: 'left' | 'right';
    disabled?: boolean;
    appearance?: legacyAppearanceType | JDSSelectorButtonProps['appearance'];
    selected?: boolean;
    size?: legacySizesType | JDSSelectorButtonProps['size'];
    stretch?: boolean;
    label?: string;
    icon?: string | JSX.Element;
    /**
     * @deprecated
     * use `text` prop
     */
    children?: React.ReactNode;
}
export declare const PROP_MAP: IPROP_MAP<SelectorButtonProps>;
export declare const withLogic: (Component: React.ComponentType<SelectorButtonProps>) => React.FC<SelectorButtonProps>;
export {};
