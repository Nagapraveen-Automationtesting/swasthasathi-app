declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        category: string[];
    };
    hierarchy: {
        container: ({
            "start-container": string[];
            "tab_item-container"?: undefined;
            "end-container"?: undefined;
        } | {
            "tab_item-container": string[];
            "start-container"?: undefined;
            "end-container"?: undefined;
        } | {
            "end-container": string[];
            "start-container"?: undefined;
            "tab_item-container"?: undefined;
        })[];
    };
    base: {
        container: {
            "web-tag": string;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            gap: string;
            width: string;
        };
        "start-container": {
            hidden: boolean;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
        };
        "end-container": {
            hidden: boolean;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
        };
        "start-jds_button2": {
            attention: string;
            size: string;
            single: boolean;
            content: {
                component: string;
                props: {
                    icon: string;
                };
            }[];
            appearance: string;
        };
        "end-jds_button2": {
            attention: string;
            size: string;
            single: boolean;
            content: {
                component: string;
                props: {
                    icon: string;
                };
            }[];
            appearance: string;
        };
        "tab_item-container": {
            "web-tag": string;
            overflow: string;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            flex: number;
            gap: string;
        };
        "tab_item-slot": {
            flex: number;
            slot_layers: {
                jds_tabs_item2: {
                    equalWidth: boolean[];
                    appearance: string[];
                    selected: boolean[];
                    disabled: boolean[];
                };
            };
        };
    };
    variant: {
        showScrollButtons: {
            true: {
                "start-container": {
                    hidden: boolean;
                };
                "end-container": {
                    hidden: boolean;
                };
                "tab_item-container": {
                    overflow: string;
                };
            };
        };
        equalWidth: {
            true: {
                "tab_item-slot": {
                    slot_layers: {
                        jds_tabs_item2: {
                            equalWidth: boolean[];
                        };
                    };
                };
            };
        };
        _disableStartScrollButton: {
            true: {
                "start-jds_button2": {
                    disabled: string;
                };
            };
        };
        _disableEndScrollButton: {
            true: {
                "end-jds_button2": {
                    disabled: string;
                };
            };
        };
    };
    api: {
        config: {
            showScrollButtons: {
                values: boolean[];
            };
            equalWidth: {
                values: boolean[];
            };
            _disableStartScrollButton: {
                values: boolean[];
            };
            _disableEndScrollButton: {
                values: boolean[];
            };
        };
        data: {
            container: {
                appearance: {
                    type: string;
                    name: string;
                    values: string[];
                };
            };
        };
        children: {
            "tab_item-slot": {
                name: string;
                accepts: string[];
            };
        };
        events: {
            "start-jds_button2": {
                onClick: string;
            };
            "end-jds_button2": {
                onClick: string;
            };
        };
        a11y: {
            "tab_item-container": {
                properties: {
                    role: {
                        value: string;
                    };
                    "aria-label": {
                        name: string;
                        value: string;
                    };
                    "aria-orientation": {
                        name: string;
                        value: string;
                    };
                };
            };
            "start-jds_button2": {
                properties: {
                    ariaLabel: string;
                    ariaDescribedby: {
                        name: string;
                        platform: string;
                    };
                    ariaHidden: string;
                };
            };
            "end-jds_button2": {
                properties: {
                    ariaLabel: string;
                    ariaDescribedby: {
                        name: string;
                        platform: string;
                    };
                    ariaHidden: string;
                };
            };
        };
    };
};
export default _default;
