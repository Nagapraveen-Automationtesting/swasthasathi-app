declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        description: string;
        usage: string;
    };
    hierarchy: {
        container: (string | {
            "top-container": (string | {
                "inner-container": string[];
            })[];
            "bottom-container"?: undefined;
        } | {
            "bottom-container": string[];
            "top-container"?: undefined;
        })[];
    };
    base: {
        container: {
            hidden: boolean;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            width: string;
            gap: string;
        };
        "top-container": {
            hidden: boolean;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            width: string;
            gap: string;
        };
        "inner-container": {
            hidden: boolean;
            height: number;
            "align-items": string;
            "padding-left": string;
            "padding-right": string;
            "border-width": string;
            "border-color": string;
            "border-radius": string;
        };
        jds_input: {
            disabled: boolean;
            hidden: boolean;
            type: string;
            textAlign: string;
            rows: number;
            width: number;
        };
        slider: {
            width: string;
            "track-height": string;
            "inactive-color": string;
            "active-color": string;
            "ball-size": number;
            "ball-color": string;
            "ball-border-color": string;
            "ball-border-width": number;
            "border-radius": string;
            behavior: {
                hover: {
                    "ball-color": string;
                };
                active: {
                    "active-color": string;
                    "ball-color": string;
                };
                focus: {
                    "ball-border-width": string;
                };
            };
        };
        "bottom-container": {
            hidden: boolean;
            show: boolean;
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            width: string;
        };
        jds_feedback_block: {
            size: string;
            hidden: boolean;
        };
        "label-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
            hidden: boolean;
            flex: number;
            "justify-content": string;
            "align-items": string;
            behavior: {
                hover: {
                    color: string;
                };
                focus: {
                    color: string;
                };
            };
        };
        "value-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
            hidden: boolean;
        };
        "min-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
        };
        "max-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
        };
        "helper-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
            hidden: boolean;
        };
    };
    variant: {
        _hideMinMaxLabel: {
            true: {
                "bottom-container": {
                    hidden: boolean;
                };
            };
        };
        editableTextBox: {
            true: {
                jds_input: {
                    hidden: boolean;
                };
                "value-jds-text": {
                    hidden: boolean;
                };
            };
        };
        state: {
            success: {
                "inner-container": {
                    "border-color": string;
                };
                jds_feedback_block: {
                    hidden: boolean;
                };
            };
            error: {
                "inner-container": {
                    "border-color": string;
                };
                jds_feedback_block: {
                    hidden: boolean;
                };
            };
            warning: {
                "inner-container": {
                    "border-color": string;
                };
                jds_feedback_block: {
                    hidden: boolean;
                };
            };
        };
        disabled: {
            true: {
                container: {
                    disabled: boolean;
                    opacity: string;
                };
                jds_input: {
                    disabled: boolean;
                };
                slider: {
                    disabled: boolean;
                    behavior: {
                        hover: {
                            "ball-color": string;
                        };
                        active: {
                            "active-color": string;
                            "ball-color": string;
                        };
                        focus: {
                            "ball-border-width": number;
                        };
                    };
                };
            };
        };
    };
    combination: {}[];
    combination_config: never[][];
    api: {
        config: {
            _hideMinMaxLabel: {
                values: boolean[];
            };
            editableTextBox: {
                values: boolean[];
                doc_description: string;
            };
            state: {
                type: string;
                doc_description: string;
                values: string[];
            };
            disabled: {
                values: boolean[];
                doc_description: string;
            };
        };
        data: {
            jds_input: {
                id: {
                    type: string;
                    name: string;
                };
                name: {
                    type: string;
                    name: string;
                };
                value: {
                    type: string;
                    name: string;
                    function: boolean;
                };
                placeholder: {
                    type: string;
                    name: string;
                };
                min: {
                    type: string;
                    name: string;
                    function: boolean;
                    doc_description: string;
                };
                max: {
                    type: string;
                    name: string;
                    function: boolean;
                    doc_description: string;
                };
                required: {
                    type: string;
                    name: string;
                };
            };
            slider: {
                step: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                min: {
                    type: string;
                    name: string;
                    function: boolean;
                    doc_description: string;
                };
                max: {
                    type: string;
                    name: string;
                    function: boolean;
                    doc_description: string;
                };
                value: {
                    type: string;
                    name: string;
                    function: boolean;
                    doc_description: string;
                };
                required: {
                    type: string;
                    name: string;
                };
            };
            jds_feedback_block: {
                stateText: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                state: {
                    type: string;
                    name: string;
                };
            };
            "label-jds-text": {
                value: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
            };
            "value-jds-text": {
                value: {
                    type: string;
                    name: string;
                    function: boolean;
                };
            };
            "min-jds-text": {
                value: {
                    type: string;
                    name: string;
                };
            };
            "max-jds-text": {
                value: {
                    type: string;
                    name: string;
                };
            };
            "helper-jds-text": {
                value: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
            };
        };
        events: {
            slider: {
                onChange: string;
                onEditChange: {
                    name: string;
                    platform: string;
                };
            };
            jds_input: {
                onFocus: string;
                onBlur: string;
                onChange: string;
                onSubmit: string;
                onKeydown: {
                    name: string;
                    platform: string;
                };
            };
        };
        a11y: {
            slider: {
                name: string;
                properties: {
                    role: {
                        value: string;
                    };
                    "aria-label": {
                        name: string;
                        prop: string;
                        function: boolean;
                    };
                    "aria-describedby": {
                        name: string;
                        platform: string;
                    };
                    "aria-valuenow": {
                        name: string;
                        prop: string;
                        platform: string;
                    };
                    "aria-valuemin": {
                        name: string;
                        prop: string;
                        platform: string;
                    };
                    "aria-valuemax": {
                        name: string;
                        prop: string;
                        platform: string;
                    };
                };
            };
        };
    };
};
export default _default;
