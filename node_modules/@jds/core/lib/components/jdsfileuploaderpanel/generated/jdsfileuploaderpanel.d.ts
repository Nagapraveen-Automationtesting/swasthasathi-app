declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        internal: boolean;
    };
    hierarchy: {
        container: (string | {
            "inner-container": string[];
        })[];
    };
    base: {
        container: {
            "flex-direction": string;
            "justify-content": string;
            "align-items": string;
            width: string;
            opacity: string;
            "background-color": string;
            "border-radius": string;
            "padding-top": string;
            "padding-bottom": string;
        };
        "inner-container": {
            hidden: boolean;
            "padding-top": string;
            "padding-bottom": string;
            "padding-left": string;
            "padding-right": string;
            width: string;
        };
        jds_file_uploader_item: {
            hidden: boolean;
        };
        jds_progress_bar: {
            kind: string;
            flex: number;
        };
    };
    variant: {
        kind: {
            collapsible: {
                jds_file_uploader_item: {
                    hidden: boolean;
                };
                "inner-container": {
                    hidden: boolean;
                };
            };
        };
    };
    combination: {
        collapsible: {
            false: {
                jds_file_uploader_item: {
                    kind: string;
                };
                jds_file_uploader_list: {
                    hidden: boolean;
                };
            };
            true: {
                jds_file_uploader_item: {
                    kind: string;
                };
                jds_file_uploader_list: {
                    hidden: boolean;
                };
            };
        };
    }[];
    combination_config: string[][];
    api: {
        config: {
            kind: {
                values: string[];
            };
            expanded: {
                values: boolean[];
            };
            showDivider: {
                values: boolean[];
            };
        };
        data: {
            jds_file_uploader_item: {
                message: {
                    type: string;
                    name: string;
                };
            };
            jds_progress_bar: {
                value: {
                    type: string;
                    name: string;
                };
            };
            jds_file_uploader_list: {
                showDivider: {
                    type: string;
                    name: string;
                };
                items: {
                    type: string;
                    name: string;
                    object: {
                        state: string;
                        message: string;
                    };
                };
            };
        };
        events: {
            jds_file_uploader_item: {
                onClick: string;
            };
            jds_file_uploader_list: {
                onClick: string;
            };
        };
        a11y: {
            jds_file_uploader_list: {
                name: string;
                repeating: {
                    itemAriaLabel: string;
                    itemAriaDescribedby: {
                        name: string;
                        platform: string;
                    };
                };
            };
            jds_file_uploader_item: {
                properties: {
                    ariaLabel: string;
                    ariaDescribedby: {
                        name: string;
                        platform: string;
                    };
                    suffixAriaLabel: {
                        name: string;
                        value: string;
                    };
                    ariaExpanded: {
                        name: string;
                        prop: string;
                    };
                };
            };
        };
    };
};
export default _default;
