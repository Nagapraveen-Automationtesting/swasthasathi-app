declare const _default: {
    metadata: {
        version: string;
        id: string;
        name: string;
        layerName: string;
        description: string;
    };
    hierarchy: {
        container: (string | {
            "field-container": (string | {
                "input-container": (string | {
                    "prefix-container": string[];
                })[];
            })[];
            "active-line-container"?: undefined;
        } | {
            "active-line-container": string[];
            "field-container"?: undefined;
        })[];
    };
    base: {
        container: {
            "flex-direction": string;
            gap: string;
            width: string;
            "justify-content": string;
            "align-items": string;
            opacity: string;
            behavior: {
                hover: {};
            };
        };
        "field-container": {
            "flex-direction": string;
            width: string;
            "align-items": string;
            "justify-content": string;
            "padding-bottom": string;
            "animate-stack-alignment": boolean;
        };
        "input-container": {
            "flex-direction": string;
            "justify-content": string;
            width: string;
            gap: string;
            "padding-top": number;
            "align-items": string;
            "z-index": number;
        };
        "prefix-container": {
            hidden: boolean;
        };
        jds_input: {
            disabled: boolean;
            type: string;
            textAlign: string;
            rows: number;
            flex: number;
        };
        "active-line-container": {
            "flex-direction": string;
            width: string;
            "align-items": string;
            "padding-bottom": number;
            "padding-top": number;
        };
        "feedback-container": {
            width: string;
            height: number;
            "background-color": string;
            "border-radius": number;
            show: boolean;
            behavior: {
                hover: {
                    "background-color": string;
                };
                focus: {
                    "background-color": string;
                };
                active: {
                    "background-color": string;
                };
            };
        };
        jds_feedback_block: {
            size: string;
            state: string;
        };
        "prefix-slot": {
            disabled: boolean;
        };
        "suffix-slot": {
            disabled: boolean;
        };
        "input_label-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
            "max-lines": number;
            textType: string;
            maxLines: number;
            "z-index": number;
            "animate-padding-left": boolean;
        };
        "helper-jds-text": {
            "font-family": string;
            color: string;
            "font-size": string;
            "line-height": string;
            "letter-spacing": string;
            "font-weight": string;
            "text-decoration": string;
            "text-transform": string;
        };
    };
    variant: {
        disabled: {
            true: {
                container: {
                    opacity: string;
                    disabled: boolean;
                };
                jds_input: {
                    disabled: boolean;
                };
                "prefix-slot": {
                    disabled: boolean;
                };
                "suffix-slot": {
                    disabled: boolean;
                };
            };
        };
        state: {
            success: {
                "feedback-container": {
                    "background-color": string;
                    behavior: {
                        hover: {
                            "background-color": string;
                        };
                        focus: {
                            "background-color": string;
                        };
                        active: {
                            "background-color": string;
                        };
                    };
                };
                jds_feedback_block: {
                    state: string;
                };
            };
            error: {
                "feedback-container": {
                    "background-color": string;
                    behavior: {
                        hover: {
                            "background-color": string;
                        };
                        focus: {
                            "background-color": string;
                        };
                        active: {
                            "background-color": string;
                        };
                    };
                };
                jds_feedback_block: {
                    state: string;
                };
            };
            warning: {
                "feedback-container": {
                    "background-color": string;
                    behavior: {
                        hover: {
                            "background-color": string;
                        };
                        focus: {
                            "background-color": string;
                        };
                        active: {
                            "background-color": string;
                        };
                    };
                };
                jds_feedback_block: {
                    state: string;
                };
            };
        };
        type: {
            email: {
                jds_input: {
                    type: string;
                };
            };
            number: {
                jds_input: {
                    type: string;
                };
            };
            password: {
                jds_input: {
                    type: string;
                };
            };
            phone: {
                jds_input: {
                    type: string;
                };
            };
        };
        _hasSuffix: {
            true: {
                "suffix-icon-container": {
                    hidden: boolean;
                };
            };
        };
    };
    combination: ({
        true: {
            true: {
                "field-container": {
                    "align-items": string;
                };
                "prefix-icon-container": {
                    hidden: boolean;
                };
                "input_label-jds-text": {
                    "font-family": string;
                    "font-size": string;
                    "line-height": string;
                    "letter-spacing": string;
                    "font-weight": string;
                    "padding-left": number;
                };
            };
            false: {
                "field-container": {
                    "align-items": string;
                };
                "input_label-jds-text": {
                    "font-family": string;
                    "font-size": string;
                    "line-height": string;
                    "letter-spacing": string;
                    "font-weight": string;
                    "padding-left": number;
                };
            };
        };
        false: {
            true: {
                "field-container": {
                    "align-items": string;
                };
                "prefix-icon-container": {
                    hidden: boolean;
                };
            };
            false: {
                "field-container": {
                    "align-items": string;
                };
                "input_label-jds-text": {
                    "padding-left": number;
                };
            };
        };
        none?: undefined;
    } | {
        none: {
            true: {
                "feedback-container": {
                    "background-color": string;
                };
            };
        };
        true?: undefined;
        false?: undefined;
    })[];
    combination_config: string[][];
    api: {
        children: {
            "prefix-slot": {
                name: string;
                accepts: string[];
                max: number;
                doc_description: string;
            };
            "suffix-slot": {
                name: string;
                accepts: string[];
                max: number;
                doc_description: string;
            };
        };
        config: {
            disabled: {
                values: boolean[];
                doc_description: string;
            };
            state: {
                type: string;
                doc_description: string;
                values: string[];
            };
            type: {
                type: string;
                function: boolean;
                values: string[];
            };
            _labelFocus: {
                values: boolean[];
            };
            _inputFocus: {
                values: boolean[];
            };
            _hasPrefix: {
                values: boolean[];
            };
            _hasSuffix: {
                values: boolean[];
            };
        };
        data: {
            jds_input: {
                id: {
                    type: string;
                    name: string;
                    platform: string;
                };
                value: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                name: {
                    type: string;
                    name: string;
                };
                autocomplete: {
                    type: string;
                    name: string;
                    platform: string;
                };
                autoFocus: {
                    type: string;
                    name: string;
                    platform: string;
                };
                placeholder: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                maxLength: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                pattern: {
                    type: string;
                    name: string;
                };
                required: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
                focusRequester: {
                    type: string;
                    name: string;
                    platform: string;
                };
                imeAction: {
                    type: string;
                    name: string;
                    platform: string;
                };
                capitalization: {
                    type: string;
                    name: string;
                    platform: string;
                };
                semantics: {
                    type: string;
                    name: string;
                    platform: string;
                };
            };
            jds_feedback_block: {
                stateText: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
            };
            "input_label-jds-text": {
                value: {
                    type: string;
                    name: string;
                    function: boolean;
                };
                id: {
                    type: string;
                    name: string;
                    platform: string;
                };
                "padding-left": {
                    type: string;
                    name: string;
                };
            };
            "helper-jds-text": {
                value: {
                    type: string;
                    name: string;
                    doc_description: string;
                };
            };
        };
        events: {
            "prefix-container": {
                onAppear: {
                    name: string;
                    platform: string;
                };
            };
            jds_input: {
                onFocus: string;
                onBlur: string;
                onChange: string;
                onKeydown: {
                    name: string;
                    platform: string;
                };
                onInvalid: string;
                onSubmit: string;
            };
            "prefix-slot": {
                onClick: string;
                onSlotMeasure: {
                    name: string;
                    platform: string;
                };
            };
            "suffix-slot": {
                onClick: string;
            };
        };
        a11y: {
            jds_input: {
                properties: {
                    ariaLabel: {
                        name: string;
                        prop: string;
                    };
                    ariaDescribedby: {
                        name: string;
                        platform: string;
                    };
                    ariaInvalid: string;
                    ariaPlaceholder: {
                        name: string;
                    };
                    ariaRequired: {
                        name: string;
                        prop: string;
                    };
                };
            };
        };
    };
};
export default _default;
