import type { JDSCarouselSlideProps, JDSCarouselPaginationItemProps } from '../../internal';
export interface JDSCarouselProps {
    /**  */
    density?: JDSCarouselPaginationItemProps['density'];
    /**  */
    indicatorType?: 'dot' | 'label' | 'dot_label' | 'none';
    /**  */
    showArrows?: boolean;
    /** only used to hide the left arrow, no op when showArrows = false */
    hideLeftArrow?: boolean;
    /** only used to hide the left arrow, no op when showArrows = false */
    hideNextSlide?: boolean;
    /** hide autoplay button when autoPlay=false */
    autoPlay?: boolean;
    /** hide autoplay button when showPlayPause=false */
    showPlayPause?: boolean;
    /**  */
    playing?: boolean;
    /**  */
    showDurationProgress?: boolean;
    /**  */
    label?: string;
    /**  */
    selectedIndex?: number;
    /** to be used when number of children != total slides (e.g. when lazyloading or server pagination) */
    totalSlides?: number;
    onPlayPause?: () => void;
    onBackBtn?: () => void;
    onNextBtn?: () => void;
    onDotClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    onClick?: (ev: React.MouseEvent<HTMLButtonElement>) => void;
    onNext?: () => void;
    onBack?: () => void;
    children?: Array<React.ReactElement<JDSCarouselSlideProps>> | React.ReactElement<JDSCarouselSlideProps>;
    PlayPauseAriaLabel?: string;
    backButtonAriaLabel?: string;
    nextButtonAriaLabel?: string;
    custom?: string;
}
