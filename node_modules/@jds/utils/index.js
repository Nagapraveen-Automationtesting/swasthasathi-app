"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});function e(e,r){const o={},n=[...Object.keys(e),...Object.keys(r)];for(const s of n)o[s]=s in r?s in e?t(e[s],r[s]):r[s]:e[s];return o}function t(t,o){return r(t)&&r(o)?e(t,o):o}function r(e){return"object"==typeof e&&null!==e&&!Array.isArray(e)}const o=e=>e?.replace(/./,e=>e.toUpperCase());exports.camelCase=(e,t="-")=>e.split(t).map((e,t)=>0===t?e:o(e)).join(""),exports.capitalise=o,exports.clamp=(e,t,r)=>Math.max(t,Math.min(e,r)),exports.cloneDeep=function e(t){if(null===t||"object"!=typeof t)return t;if(Array.isArray(t)){const r=[];for(let o=0;o<t.length;o++)r[o]=e(t[o]);return r}const r={};for(const o in t)Object.prototype.hasOwnProperty.call(t,o)&&(r[o]=e(t[o]));return r},exports.debounce=(e,t,r=!1)=>{let o;return function(...n){const s=r&&!o;null!==o&&clearTimeout(o),o=setTimeout(()=>{o=null,r||e.apply(this,n)},t),s&&e.apply(this,n)}},exports.deepClone=function(e){return globalThis.structuredClone?globalThis.structuredClone(e):JSON.parse(JSON.stringify(e))},exports.each=function(e,t){if(Array.isArray(e))for(const r of e)t(r);else{const r=Object.keys(e);for(const o of r)t(e[o],o)}},exports.get=(e,t,r)=>{if(!t)return;const o=Array.isArray(t)?t:t.match(/([^[.\]])+/g),n=o?.reduce((e,t)=>e&&e[t],e);return void 0===n?r:n},exports.hexToRGB=function(e){const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16)/255,g:parseInt(t[2],16)/255,b:parseInt(t[3],16)/255}:{r:0,g:0,b:0}},exports.kebabcase=e=>e.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/([0-9])([a-zA-Z])/g,"$1-$2").replace(/([a-zA-Z])([0-9])/g,"$1-$2").replace(/\s+/g,"-").toLowerCase(),exports.merge=function t(r,...o){let n;if((o=o.filter(Boolean)).length>1){const[e,...r]=o;n=t(e,...r)}else{if(1!==o.length)return r;n=o[0]}return e(r,n)},exports.normalizeCapitalize=e=>`${e.charAt(0).toUpperCase()}${e.slice(1).toLowerCase()}`,exports.omit=(e,t)=>(e={...e},t.forEach(t=>delete e[t]),e),exports.omitBy=(e,t)=>(e={...e},Object.entries(e).forEach(([r,o])=>t(o,r)&&delete e[r]),e),exports.pascalCase=(e,t="-")=>e.split(t).map(o).join(""),exports.pickBy=(e,t)=>{if("function"!=typeof t)throw new TypeError("Predicate must be a function");const r={};for(const o in e)Object.prototype.hasOwnProperty.call(e,o)&&t(e[o],o)&&(r[o]=e[o]);return r},exports.removeBraces=e=>e.replace(/[{}]/g,""),exports.snakeCase=e=>e.replace(/\W+/g," ").split(/ |\B(?=[A-Z])/).map(e=>e.toLowerCase()).join("_");
