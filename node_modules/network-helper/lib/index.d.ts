import { IMakeJHHApiCall, IMakeInSecureApiCall, IdynamicKey } from './types/main';
export { IMakeJHHApiCall, IMakeInSecureApiCall } from './types/main';
export { deviceType, versionNumber, countryCode, language, _getGUID, _setDHRefreshLocalItems, _setUserInfo, _setDeviceInfo, _getClientPublicKey, _getAccessToken, _getUserInfo, _getDeviceInfo, _removeLocalKeys, _setMPINVerified, _setMPINAttempt, _setMPINAttemptDate, _getMPINAttemptDate, _getMPINAttempt, _removeMPINAttempts, _removeMPINVerified, _setAccessToken, _setSymmetricKey, _setItemInLocalEncrypted, _getItemFromLocalDecrypted } from './JHH/index';
export { _initalizeClientPublicKey, _getEncryptedValue, getSHA3 } from './library/dh';
export declare const _isJHHUserLoggedIn: () => boolean;
export declare const _isMPINVerified: () => boolean;
export declare const _serialize: (obj: IdynamicKey) => string;
export declare const setJHHRedirectURL: (redirectURL?: string | undefined) => void;
export declare const getJHHRedirectURL: () => string | null;
export declare const _removeJHHRedirectURL: () => void;
export declare const _makeJHHApiCall: ({ url, method, dataObj, params, headers, redirectURL, isBlobRequest, requestBody, responseBody, setJHHUserInfo, setJHHDeviceInfo, uploadProgressConfig, responseHeader }: IMakeJHHApiCall) => Promise<any>;
export declare const _makeInSecureApiCall: ({ url, method, dataObj, params, headers, redirectURL, isBlobRequest, requestBody, responseBody, uploadProgressConfig }: IMakeInSecureApiCall) => Promise<any>;
